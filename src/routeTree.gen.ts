/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as MainRouteRouteImport } from './routes/_main/route'
import { Route as CvRouteRouteImport } from './routes/_cv/route'
import { Route as MainIndexRouteImport } from './routes/_main/index'
import { Route as MainMusicRouteImport } from './routes/_main/music'
import { Route as MainGuestbookRouteImport } from './routes/_main/guestbook'
import { Route as CvResumeRouteImport } from './routes/_cv/resume'
import { Route as CvCvRouteImport } from './routes/_cv/cv'
import { Route as MainProjectsIndexRouteImport } from './routes/_main/projects.index'
import { Route as MainProjectsProjectSlugRouteImport } from './routes/_main/projects.$projectSlug'
import { Route as CvLocaleCvRouteImport } from './routes/_cv/$locale.cv'
import { ServerRoute as ApiProjectsIndexServerRouteImport } from './routes/api/projects.index'
import { ServerRoute as ApiProjectsProjectSlugServerRouteImport } from './routes/api/projects.$projectSlug'

const rootServerRouteImport = createServerRootRoute()

const MainRouteRoute = MainRouteRouteImport.update({
  id: '/_main',
  getParentRoute: () => rootRouteImport,
} as any)
const CvRouteRoute = CvRouteRouteImport.update({
  id: '/_cv',
  getParentRoute: () => rootRouteImport,
} as any)
const MainIndexRoute = MainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRouteRoute,
} as any)
const MainMusicRoute = MainMusicRouteImport.update({
  id: '/music',
  path: '/music',
  getParentRoute: () => MainRouteRoute,
} as any)
const MainGuestbookRoute = MainGuestbookRouteImport.update({
  id: '/guestbook',
  path: '/guestbook',
  getParentRoute: () => MainRouteRoute,
} as any)
const CvResumeRoute = CvResumeRouteImport.update({
  id: '/resume',
  path: '/resume',
  getParentRoute: () => CvRouteRoute,
} as any)
const CvCvRoute = CvCvRouteImport.update({
  id: '/cv',
  path: '/cv',
  getParentRoute: () => CvRouteRoute,
} as any)
const MainProjectsIndexRoute = MainProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => MainRouteRoute,
} as any)
const MainProjectsProjectSlugRoute = MainProjectsProjectSlugRouteImport.update({
  id: '/projects/$projectSlug',
  path: '/projects/$projectSlug',
  getParentRoute: () => MainRouteRoute,
} as any)
const CvLocaleCvRoute = CvLocaleCvRouteImport.update({
  id: '/$locale/cv',
  path: '/$locale/cv',
  getParentRoute: () => CvRouteRoute,
} as any)
const ApiProjectsIndexServerRoute = ApiProjectsIndexServerRouteImport.update({
  id: '/api/projects/',
  path: '/api/projects/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiProjectsProjectSlugServerRoute =
  ApiProjectsProjectSlugServerRouteImport.update({
    id: '/api/projects/$projectSlug',
    path: '/api/projects/$projectSlug',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/cv': typeof CvCvRoute
  '/resume': typeof CvResumeRoute
  '/guestbook': typeof MainGuestbookRoute
  '/music': typeof MainMusicRoute
  '/': typeof MainIndexRoute
  '/$locale/cv': typeof CvLocaleCvRoute
  '/projects/$projectSlug': typeof MainProjectsProjectSlugRoute
  '/projects': typeof MainProjectsIndexRoute
}
export interface FileRoutesByTo {
  '/cv': typeof CvCvRoute
  '/resume': typeof CvResumeRoute
  '/guestbook': typeof MainGuestbookRoute
  '/music': typeof MainMusicRoute
  '/': typeof MainIndexRoute
  '/$locale/cv': typeof CvLocaleCvRoute
  '/projects/$projectSlug': typeof MainProjectsProjectSlugRoute
  '/projects': typeof MainProjectsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_cv': typeof CvRouteRouteWithChildren
  '/_main': typeof MainRouteRouteWithChildren
  '/_cv/cv': typeof CvCvRoute
  '/_cv/resume': typeof CvResumeRoute
  '/_main/guestbook': typeof MainGuestbookRoute
  '/_main/music': typeof MainMusicRoute
  '/_main/': typeof MainIndexRoute
  '/_cv/$locale/cv': typeof CvLocaleCvRoute
  '/_main/projects/$projectSlug': typeof MainProjectsProjectSlugRoute
  '/_main/projects/': typeof MainProjectsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/cv'
    | '/resume'
    | '/guestbook'
    | '/music'
    | '/'
    | '/$locale/cv'
    | '/projects/$projectSlug'
    | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/cv'
    | '/resume'
    | '/guestbook'
    | '/music'
    | '/'
    | '/$locale/cv'
    | '/projects/$projectSlug'
    | '/projects'
  id:
    | '__root__'
    | '/_cv'
    | '/_main'
    | '/_cv/cv'
    | '/_cv/resume'
    | '/_main/guestbook'
    | '/_main/music'
    | '/_main/'
    | '/_cv/$locale/cv'
    | '/_main/projects/$projectSlug'
    | '/_main/projects/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  CvRouteRoute: typeof CvRouteRouteWithChildren
  MainRouteRoute: typeof MainRouteRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/projects/$projectSlug': typeof ApiProjectsProjectSlugServerRoute
  '/api/projects': typeof ApiProjectsIndexServerRoute
}
export interface FileServerRoutesByTo {
  '/api/projects/$projectSlug': typeof ApiProjectsProjectSlugServerRoute
  '/api/projects': typeof ApiProjectsIndexServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/projects/$projectSlug': typeof ApiProjectsProjectSlugServerRoute
  '/api/projects/': typeof ApiProjectsIndexServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/projects/$projectSlug' | '/api/projects'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/projects/$projectSlug' | '/api/projects'
  id: '__root__' | '/api/projects/$projectSlug' | '/api/projects/'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiProjectsProjectSlugServerRoute: typeof ApiProjectsProjectSlugServerRoute
  ApiProjectsIndexServerRoute: typeof ApiProjectsIndexServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_cv': {
      id: '/_cv'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof CvRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/music': {
      id: '/_main/music'
      path: '/music'
      fullPath: '/music'
      preLoaderRoute: typeof MainMusicRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/guestbook': {
      id: '/_main/guestbook'
      path: '/guestbook'
      fullPath: '/guestbook'
      preLoaderRoute: typeof MainGuestbookRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_cv/resume': {
      id: '/_cv/resume'
      path: '/resume'
      fullPath: '/resume'
      preLoaderRoute: typeof CvResumeRouteImport
      parentRoute: typeof CvRouteRoute
    }
    '/_cv/cv': {
      id: '/_cv/cv'
      path: '/cv'
      fullPath: '/cv'
      preLoaderRoute: typeof CvCvRouteImport
      parentRoute: typeof CvRouteRoute
    }
    '/_main/projects/': {
      id: '/_main/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof MainProjectsIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/projects/$projectSlug': {
      id: '/_main/projects/$projectSlug'
      path: '/projects/$projectSlug'
      fullPath: '/projects/$projectSlug'
      preLoaderRoute: typeof MainProjectsProjectSlugRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_cv/$locale/cv': {
      id: '/_cv/$locale/cv'
      path: '/$locale/cv'
      fullPath: '/$locale/cv'
      preLoaderRoute: typeof CvLocaleCvRouteImport
      parentRoute: typeof CvRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/projects/': {
      id: '/api/projects/'
      path: '/api/projects'
      fullPath: '/api/projects'
      preLoaderRoute: typeof ApiProjectsIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/projects/$projectSlug': {
      id: '/api/projects/$projectSlug'
      path: '/api/projects/$projectSlug'
      fullPath: '/api/projects/$projectSlug'
      preLoaderRoute: typeof ApiProjectsProjectSlugServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface CvRouteRouteChildren {
  CvCvRoute: typeof CvCvRoute
  CvResumeRoute: typeof CvResumeRoute
  CvLocaleCvRoute: typeof CvLocaleCvRoute
}

const CvRouteRouteChildren: CvRouteRouteChildren = {
  CvCvRoute: CvCvRoute,
  CvResumeRoute: CvResumeRoute,
  CvLocaleCvRoute: CvLocaleCvRoute,
}

const CvRouteRouteWithChildren =
  CvRouteRoute._addFileChildren(CvRouteRouteChildren)

interface MainRouteRouteChildren {
  MainGuestbookRoute: typeof MainGuestbookRoute
  MainMusicRoute: typeof MainMusicRoute
  MainIndexRoute: typeof MainIndexRoute
  MainProjectsProjectSlugRoute: typeof MainProjectsProjectSlugRoute
  MainProjectsIndexRoute: typeof MainProjectsIndexRoute
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainGuestbookRoute: MainGuestbookRoute,
  MainMusicRoute: MainMusicRoute,
  MainIndexRoute: MainIndexRoute,
  MainProjectsProjectSlugRoute: MainProjectsProjectSlugRoute,
  MainProjectsIndexRoute: MainProjectsIndexRoute,
}

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  CvRouteRoute: CvRouteRouteWithChildren,
  MainRouteRoute: MainRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiProjectsProjectSlugServerRoute: ApiProjectsProjectSlugServerRoute,
  ApiProjectsIndexServerRoute: ApiProjectsIndexServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
