/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainRouteRouteImport } from './routes/_main/route'
import { Route as CvRouteRouteImport } from './routes/_cv/route'
import { Route as MainIndexRouteImport } from './routes/_main/index'
import { Route as MainMusicRouteImport } from './routes/_main/music'
import { Route as MainGuestbookRouteImport } from './routes/_main/guestbook'
import { Route as CvResumeRouteImport } from './routes/_cv/resume'
import { Route as CvCvRouteImport } from './routes/_cv/cv'
import { Route as MainProjectsIndexRouteImport } from './routes/_main/projects.index'
import { Route as MainProjectsProjectSlugRouteImport } from './routes/_main/projects.$projectSlug'
import { Route as CvLocaleCvRouteImport } from './routes/_cv/$locale.cv'

// Create/Update Routes

const MainRouteRoute = MainRouteRouteImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const CvRouteRoute = CvRouteRouteImport.update({
  id: '/_cv',
  getParentRoute: () => rootRoute,
} as any)

const MainIndexRoute = MainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRouteRoute,
} as any)

const MainMusicRoute = MainMusicRouteImport.update({
  id: '/music',
  path: '/music',
  getParentRoute: () => MainRouteRoute,
} as any)

const MainGuestbookRoute = MainGuestbookRouteImport.update({
  id: '/guestbook',
  path: '/guestbook',
  getParentRoute: () => MainRouteRoute,
} as any)

const CvResumeRoute = CvResumeRouteImport.update({
  id: '/resume',
  path: '/resume',
  getParentRoute: () => CvRouteRoute,
} as any)

const CvCvRoute = CvCvRouteImport.update({
  id: '/cv',
  path: '/cv',
  getParentRoute: () => CvRouteRoute,
} as any)

const MainProjectsIndexRoute = MainProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => MainRouteRoute,
} as any)

const MainProjectsProjectSlugRoute = MainProjectsProjectSlugRouteImport.update({
  id: '/projects/$projectSlug',
  path: '/projects/$projectSlug',
  getParentRoute: () => MainRouteRoute,
} as any)

const CvLocaleCvRoute = CvLocaleCvRouteImport.update({
  id: '/$locale/cv',
  path: '/$locale/cv',
  getParentRoute: () => CvRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_cv': {
      id: '/_cv'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof CvRouteRouteImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainRouteRouteImport
      parentRoute: typeof rootRoute
    }
    '/_cv/cv': {
      id: '/_cv/cv'
      path: '/cv'
      fullPath: '/cv'
      preLoaderRoute: typeof CvCvRouteImport
      parentRoute: typeof CvRouteRouteImport
    }
    '/_cv/resume': {
      id: '/_cv/resume'
      path: '/resume'
      fullPath: '/resume'
      preLoaderRoute: typeof CvResumeRouteImport
      parentRoute: typeof CvRouteRouteImport
    }
    '/_main/guestbook': {
      id: '/_main/guestbook'
      path: '/guestbook'
      fullPath: '/guestbook'
      preLoaderRoute: typeof MainGuestbookRouteImport
      parentRoute: typeof MainRouteRouteImport
    }
    '/_main/music': {
      id: '/_main/music'
      path: '/music'
      fullPath: '/music'
      preLoaderRoute: typeof MainMusicRouteImport
      parentRoute: typeof MainRouteRouteImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof MainRouteRouteImport
    }
    '/_cv/$locale/cv': {
      id: '/_cv/$locale/cv'
      path: '/$locale/cv'
      fullPath: '/$locale/cv'
      preLoaderRoute: typeof CvLocaleCvRouteImport
      parentRoute: typeof CvRouteRouteImport
    }
    '/_main/projects/$projectSlug': {
      id: '/_main/projects/$projectSlug'
      path: '/projects/$projectSlug'
      fullPath: '/projects/$projectSlug'
      preLoaderRoute: typeof MainProjectsProjectSlugRouteImport
      parentRoute: typeof MainRouteRouteImport
    }
    '/_main/projects/': {
      id: '/_main/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof MainProjectsIndexRouteImport
      parentRoute: typeof MainRouteRouteImport
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './routes/_cv/route' {
  const createFileRoute: CreateFileRoute<
    '/_cv',
    FileRoutesByPath['/_cv']['parentRoute'],
    FileRoutesByPath['/_cv']['id'],
    FileRoutesByPath['/_cv']['path'],
    FileRoutesByPath['/_cv']['fullPath']
  >
}
declare module './routes/_main/route' {
  const createFileRoute: CreateFileRoute<
    '/_main',
    FileRoutesByPath['/_main']['parentRoute'],
    FileRoutesByPath['/_main']['id'],
    FileRoutesByPath['/_main']['path'],
    FileRoutesByPath['/_main']['fullPath']
  >
}
declare module './routes/_cv/cv' {
  const createFileRoute: CreateFileRoute<
    '/_cv/cv',
    FileRoutesByPath['/_cv/cv']['parentRoute'],
    FileRoutesByPath['/_cv/cv']['id'],
    FileRoutesByPath['/_cv/cv']['path'],
    FileRoutesByPath['/_cv/cv']['fullPath']
  >
}
declare module './routes/_cv/resume' {
  const createFileRoute: CreateFileRoute<
    '/_cv/resume',
    FileRoutesByPath['/_cv/resume']['parentRoute'],
    FileRoutesByPath['/_cv/resume']['id'],
    FileRoutesByPath['/_cv/resume']['path'],
    FileRoutesByPath['/_cv/resume']['fullPath']
  >
}
declare module './routes/_main/guestbook' {
  const createFileRoute: CreateFileRoute<
    '/_main/guestbook',
    FileRoutesByPath['/_main/guestbook']['parentRoute'],
    FileRoutesByPath['/_main/guestbook']['id'],
    FileRoutesByPath['/_main/guestbook']['path'],
    FileRoutesByPath['/_main/guestbook']['fullPath']
  >
}
declare module './routes/_main/music' {
  const createFileRoute: CreateFileRoute<
    '/_main/music',
    FileRoutesByPath['/_main/music']['parentRoute'],
    FileRoutesByPath['/_main/music']['id'],
    FileRoutesByPath['/_main/music']['path'],
    FileRoutesByPath['/_main/music']['fullPath']
  >
}
declare module './routes/_main/index' {
  const createFileRoute: CreateFileRoute<
    '/_main/',
    FileRoutesByPath['/_main/']['parentRoute'],
    FileRoutesByPath['/_main/']['id'],
    FileRoutesByPath['/_main/']['path'],
    FileRoutesByPath['/_main/']['fullPath']
  >
}
declare module './routes/_cv/$locale.cv' {
  const createFileRoute: CreateFileRoute<
    '/_cv/$locale/cv',
    FileRoutesByPath['/_cv/$locale/cv']['parentRoute'],
    FileRoutesByPath['/_cv/$locale/cv']['id'],
    FileRoutesByPath['/_cv/$locale/cv']['path'],
    FileRoutesByPath['/_cv/$locale/cv']['fullPath']
  >
}
declare module './routes/_main/projects.$projectSlug' {
  const createFileRoute: CreateFileRoute<
    '/_main/projects/$projectSlug',
    FileRoutesByPath['/_main/projects/$projectSlug']['parentRoute'],
    FileRoutesByPath['/_main/projects/$projectSlug']['id'],
    FileRoutesByPath['/_main/projects/$projectSlug']['path'],
    FileRoutesByPath['/_main/projects/$projectSlug']['fullPath']
  >
}
declare module './routes/_main/projects.index' {
  const createFileRoute: CreateFileRoute<
    '/_main/projects/',
    FileRoutesByPath['/_main/projects/']['parentRoute'],
    FileRoutesByPath['/_main/projects/']['id'],
    FileRoutesByPath['/_main/projects/']['path'],
    FileRoutesByPath['/_main/projects/']['fullPath']
  >
}

// Create and export the route tree

interface CvRouteRouteChildren {
  CvCvRoute: typeof CvCvRoute
  CvResumeRoute: typeof CvResumeRoute
  CvLocaleCvRoute: typeof CvLocaleCvRoute
}

const CvRouteRouteChildren: CvRouteRouteChildren = {
  CvCvRoute: CvCvRoute,
  CvResumeRoute: CvResumeRoute,
  CvLocaleCvRoute: CvLocaleCvRoute,
}

const CvRouteRouteWithChildren =
  CvRouteRoute._addFileChildren(CvRouteRouteChildren)

interface MainRouteRouteChildren {
  MainGuestbookRoute: typeof MainGuestbookRoute
  MainMusicRoute: typeof MainMusicRoute
  MainIndexRoute: typeof MainIndexRoute
  MainProjectsProjectSlugRoute: typeof MainProjectsProjectSlugRoute
  MainProjectsIndexRoute: typeof MainProjectsIndexRoute
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainGuestbookRoute: MainGuestbookRoute,
  MainMusicRoute: MainMusicRoute,
  MainIndexRoute: MainIndexRoute,
  MainProjectsProjectSlugRoute: MainProjectsProjectSlugRoute,
  MainProjectsIndexRoute: MainProjectsIndexRoute,
}

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof MainRouteRouteWithChildren
  '/cv': typeof CvCvRoute
  '/resume': typeof CvResumeRoute
  '/guestbook': typeof MainGuestbookRoute
  '/music': typeof MainMusicRoute
  '/': typeof MainIndexRoute
  '/$locale/cv': typeof CvLocaleCvRoute
  '/projects/$projectSlug': typeof MainProjectsProjectSlugRoute
  '/projects': typeof MainProjectsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof CvRouteRouteWithChildren
  '/cv': typeof CvCvRoute
  '/resume': typeof CvResumeRoute
  '/guestbook': typeof MainGuestbookRoute
  '/music': typeof MainMusicRoute
  '/': typeof MainIndexRoute
  '/$locale/cv': typeof CvLocaleCvRoute
  '/projects/$projectSlug': typeof MainProjectsProjectSlugRoute
  '/projects': typeof MainProjectsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_cv': typeof CvRouteRouteWithChildren
  '/_main': typeof MainRouteRouteWithChildren
  '/_cv/cv': typeof CvCvRoute
  '/_cv/resume': typeof CvResumeRoute
  '/_main/guestbook': typeof MainGuestbookRoute
  '/_main/music': typeof MainMusicRoute
  '/_main/': typeof MainIndexRoute
  '/_cv/$locale/cv': typeof CvLocaleCvRoute
  '/_main/projects/$projectSlug': typeof MainProjectsProjectSlugRoute
  '/_main/projects/': typeof MainProjectsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/cv'
    | '/resume'
    | '/guestbook'
    | '/music'
    | '/'
    | '/$locale/cv'
    | '/projects/$projectSlug'
    | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/cv'
    | '/resume'
    | '/guestbook'
    | '/music'
    | '/'
    | '/$locale/cv'
    | '/projects/$projectSlug'
    | '/projects'
  id:
    | '__root__'
    | '/_cv'
    | '/_main'
    | '/_cv/cv'
    | '/_cv/resume'
    | '/_main/guestbook'
    | '/_main/music'
    | '/_main/'
    | '/_cv/$locale/cv'
    | '/_main/projects/$projectSlug'
    | '/_main/projects/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  CvRouteRoute: typeof CvRouteRouteWithChildren
  MainRouteRoute: typeof MainRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  CvRouteRoute: CvRouteRouteWithChildren,
  MainRouteRoute: MainRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_cv",
        "/_main"
      ]
    },
    "/_cv": {
      "filePath": "_cv/route.tsx",
      "children": [
        "/_cv/cv",
        "/_cv/resume",
        "/_cv/$locale/cv"
      ]
    },
    "/_main": {
      "filePath": "_main/route.tsx",
      "children": [
        "/_main/guestbook",
        "/_main/music",
        "/_main/",
        "/_main/projects/$projectSlug",
        "/_main/projects/"
      ]
    },
    "/_cv/cv": {
      "filePath": "_cv/cv.tsx",
      "parent": "/_cv"
    },
    "/_cv/resume": {
      "filePath": "_cv/resume.tsx",
      "parent": "/_cv"
    },
    "/_main/guestbook": {
      "filePath": "_main/guestbook.tsx",
      "parent": "/_main"
    },
    "/_main/music": {
      "filePath": "_main/music.tsx",
      "parent": "/_main"
    },
    "/_main/": {
      "filePath": "_main/index.tsx",
      "parent": "/_main"
    },
    "/_cv/$locale/cv": {
      "filePath": "_cv/$locale.cv.tsx",
      "parent": "/_cv"
    },
    "/_main/projects/$projectSlug": {
      "filePath": "_main/projects.$projectSlug.tsx",
      "parent": "/_main"
    },
    "/_main/projects/": {
      "filePath": "_main/projects.index.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
