/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainRouteImport } from './routes/_main/route'
import { Route as CvRouteImport } from './routes/_cv/route'
import { Route as MainIndexImport } from './routes/_main/index'
import { Route as CvCvImport } from './routes/_cv/cv'
import { Route as MainProjectsIndexImport } from './routes/_main/projects.index'
import { Route as MainProjectsProjectSlugImport } from './routes/_main/projects.$projectSlug'
import { Route as CvLocaleCvImport } from './routes/_cv/$locale.cv'

// Create/Update Routes

const MainRouteRoute = MainRouteImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const CvRouteRoute = CvRouteImport.update({
  id: '/_cv',
  getParentRoute: () => rootRoute,
} as any)

const MainIndexRoute = MainIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRouteRoute,
} as any)

const CvCvRoute = CvCvImport.update({
  id: '/cv',
  path: '/cv',
  getParentRoute: () => CvRouteRoute,
} as any)

const MainProjectsIndexRoute = MainProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => MainRouteRoute,
} as any)

const MainProjectsProjectSlugRoute = MainProjectsProjectSlugImport.update({
  id: '/projects/$projectSlug',
  path: '/projects/$projectSlug',
  getParentRoute: () => MainRouteRoute,
} as any)

const CvLocaleCvRoute = CvLocaleCvImport.update({
  id: '/$locale/cv',
  path: '/$locale/cv',
  getParentRoute: () => CvRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_cv': {
      id: '/_cv'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof CvRouteImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainRouteImport
      parentRoute: typeof rootRoute
    }
    '/_cv/cv': {
      id: '/_cv/cv'
      path: '/cv'
      fullPath: '/cv'
      preLoaderRoute: typeof CvCvImport
      parentRoute: typeof CvRouteImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexImport
      parentRoute: typeof MainRouteImport
    }
    '/_cv/$locale/cv': {
      id: '/_cv/$locale/cv'
      path: '/$locale/cv'
      fullPath: '/$locale/cv'
      preLoaderRoute: typeof CvLocaleCvImport
      parentRoute: typeof CvRouteImport
    }
    '/_main/projects/$projectSlug': {
      id: '/_main/projects/$projectSlug'
      path: '/projects/$projectSlug'
      fullPath: '/projects/$projectSlug'
      preLoaderRoute: typeof MainProjectsProjectSlugImport
      parentRoute: typeof MainRouteImport
    }
    '/_main/projects/': {
      id: '/_main/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof MainProjectsIndexImport
      parentRoute: typeof MainRouteImport
    }
  }
}

// Create and export the route tree

interface CvRouteRouteChildren {
  CvCvRoute: typeof CvCvRoute
  CvLocaleCvRoute: typeof CvLocaleCvRoute
}

const CvRouteRouteChildren: CvRouteRouteChildren = {
  CvCvRoute: CvCvRoute,
  CvLocaleCvRoute: CvLocaleCvRoute,
}

const CvRouteRouteWithChildren =
  CvRouteRoute._addFileChildren(CvRouteRouteChildren)

interface MainRouteRouteChildren {
  MainIndexRoute: typeof MainIndexRoute
  MainProjectsProjectSlugRoute: typeof MainProjectsProjectSlugRoute
  MainProjectsIndexRoute: typeof MainProjectsIndexRoute
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainIndexRoute: MainIndexRoute,
  MainProjectsProjectSlugRoute: MainProjectsProjectSlugRoute,
  MainProjectsIndexRoute: MainProjectsIndexRoute,
}

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof MainRouteRouteWithChildren
  '/cv': typeof CvCvRoute
  '/': typeof MainIndexRoute
  '/$locale/cv': typeof CvLocaleCvRoute
  '/projects/$projectSlug': typeof MainProjectsProjectSlugRoute
  '/projects': typeof MainProjectsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof CvRouteRouteWithChildren
  '/cv': typeof CvCvRoute
  '/': typeof MainIndexRoute
  '/$locale/cv': typeof CvLocaleCvRoute
  '/projects/$projectSlug': typeof MainProjectsProjectSlugRoute
  '/projects': typeof MainProjectsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_cv': typeof CvRouteRouteWithChildren
  '/_main': typeof MainRouteRouteWithChildren
  '/_cv/cv': typeof CvCvRoute
  '/_main/': typeof MainIndexRoute
  '/_cv/$locale/cv': typeof CvLocaleCvRoute
  '/_main/projects/$projectSlug': typeof MainProjectsProjectSlugRoute
  '/_main/projects/': typeof MainProjectsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/cv'
    | '/'
    | '/$locale/cv'
    | '/projects/$projectSlug'
    | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/cv' | '/' | '/$locale/cv' | '/projects/$projectSlug' | '/projects'
  id:
    | '__root__'
    | '/_cv'
    | '/_main'
    | '/_cv/cv'
    | '/_main/'
    | '/_cv/$locale/cv'
    | '/_main/projects/$projectSlug'
    | '/_main/projects/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  CvRouteRoute: typeof CvRouteRouteWithChildren
  MainRouteRoute: typeof MainRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  CvRouteRoute: CvRouteRouteWithChildren,
  MainRouteRoute: MainRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_cv",
        "/_main"
      ]
    },
    "/_cv": {
      "filePath": "_cv/route.tsx",
      "children": [
        "/_cv/cv",
        "/_cv/$locale/cv"
      ]
    },
    "/_main": {
      "filePath": "_main/route.tsx",
      "children": [
        "/_main/",
        "/_main/projects/$projectSlug",
        "/_main/projects/"
      ]
    },
    "/_cv/cv": {
      "filePath": "_cv/cv.tsx",
      "parent": "/_cv"
    },
    "/_main/": {
      "filePath": "_main/index.tsx",
      "parent": "/_main"
    },
    "/_cv/$locale/cv": {
      "filePath": "_cv/$locale.cv.tsx",
      "parent": "/_cv"
    },
    "/_main/projects/$projectSlug": {
      "filePath": "_main/projects.$projectSlug.tsx",
      "parent": "/_main"
    },
    "/_main/projects/": {
      "filePath": "_main/projects.index.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
